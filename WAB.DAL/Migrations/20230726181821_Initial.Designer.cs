// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WAB.DAL.Context;

#nullable disable

namespace WAB.DAL.Migrations
{
    [DbContext(typeof(WabContext))]
    [Migration("20230726181821_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WAB.DAL.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int?>("AuthorizedUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Pending")
                        .HasColumnType("boolean");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuthorizedUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = -2000,
                            Amount = 409.58m,
                            Date = new DateTime(2023, 4, 30, 6, 52, 58, 862, DateTimeKind.Utc).AddTicks(7944),
                            Description = "Iure dolor odio voluptas non.",
                            Icon = "https://picsum.photos/640/480/?image=738",
                            Name = "Handcrafted Plastic Fish",
                            Pending = false,
                            Type = 1,
                            UserId = -991
                        },
                        new
                        {
                            Id = -1999,
                            Amount = 364.25m,
                            Date = new DateTime(2023, 3, 2, 2, 58, 47, 150, DateTimeKind.Utc).AddTicks(9561),
                            Description = "Molestiae ea praesentium expedita nemo.",
                            Icon = "https://picsum.photos/640/480/?image=663",
                            Name = "Fantastic Soft Sausages",
                            Pending = false,
                            Type = 0,
                            UserId = -998
                        },
                        new
                        {
                            Id = -1998,
                            Amount = 150.53m,
                            AuthorizedUserId = -998,
                            Date = new DateTime(2022, 11, 21, 7, 49, 50, 847, DateTimeKind.Utc).AddTicks(7208),
                            Description = "Perferendis optio vero veritatis sequi.",
                            Icon = "https://picsum.photos/640/480/?image=279",
                            Name = "Gorgeous Soft Table",
                            Pending = true,
                            Type = 0,
                            UserId = -992
                        },
                        new
                        {
                            Id = -1997,
                            Amount = 384.56m,
                            Date = new DateTime(2023, 3, 9, 18, 0, 3, 755, DateTimeKind.Utc).AddTicks(1846),
                            Description = "Facere hic sed eius voluptatem.",
                            Icon = "https://picsum.photos/640/480/?image=1008",
                            Name = "Unbranded Fresh Sausages",
                            Pending = false,
                            Type = 1,
                            UserId = -997
                        },
                        new
                        {
                            Id = -1996,
                            Amount = 248.62m,
                            AuthorizedUserId = -991,
                            Date = new DateTime(2023, 3, 9, 3, 29, 17, 759, DateTimeKind.Utc).AddTicks(1983),
                            Description = "Sint esse eaque laboriosam voluptatem.",
                            Icon = "https://picsum.photos/640/480/?image=641",
                            Name = "Handcrafted Soft Gloves",
                            Pending = false,
                            Type = 1,
                            UserId = -998
                        },
                        new
                        {
                            Id = -1995,
                            Amount = 230.57m,
                            AuthorizedUserId = -994,
                            Date = new DateTime(2023, 6, 25, 22, 45, 29, 655, DateTimeKind.Utc).AddTicks(475),
                            Description = "Iste ab aut aut est.",
                            Icon = "https://picsum.photos/640/480/?image=91",
                            Name = "Gorgeous Metal Tuna",
                            Pending = false,
                            Type = 1,
                            UserId = -997
                        },
                        new
                        {
                            Id = -1994,
                            Amount = 225.35m,
                            Date = new DateTime(2022, 12, 13, 16, 4, 22, 329, DateTimeKind.Utc).AddTicks(7867),
                            Description = "Ipsa iste magni maxime inventore.",
                            Icon = "https://picsum.photos/640/480/?image=86",
                            Name = "Refined Plastic Car",
                            Pending = false,
                            Type = 0,
                            UserId = -997
                        },
                        new
                        {
                            Id = -1993,
                            Amount = 345.71m,
                            Date = new DateTime(2022, 12, 13, 7, 4, 51, 411, DateTimeKind.Utc).AddTicks(3077),
                            Description = "Dolores non aut aut omnis.",
                            Icon = "https://picsum.photos/640/480/?image=840",
                            Name = "Small Frozen Sausages",
                            Pending = true,
                            Type = 0,
                            UserId = -997
                        },
                        new
                        {
                            Id = -1992,
                            Amount = 50.20m,
                            AuthorizedUserId = -996,
                            Date = new DateTime(2023, 6, 28, 15, 19, 24, 609, DateTimeKind.Utc).AddTicks(6019),
                            Description = "Error itaque deleniti praesentium sed.",
                            Icon = "https://picsum.photos/640/480/?image=910",
                            Name = "Ergonomic Frozen Tuna",
                            Pending = true,
                            Type = 0,
                            UserId = -999
                        },
                        new
                        {
                            Id = -1991,
                            Amount = 240.07m,
                            Date = new DateTime(2023, 4, 28, 15, 11, 36, 757, DateTimeKind.Utc).AddTicks(7779),
                            Description = "Sunt est architecto aut eum.",
                            Icon = "https://picsum.photos/640/480/?image=397",
                            Name = "Small Plastic Shirt",
                            Pending = false,
                            Type = 0,
                            UserId = -994
                        },
                        new
                        {
                            Id = -1990,
                            Amount = 177.79m,
                            Date = new DateTime(2023, 4, 6, 23, 45, 44, 729, DateTimeKind.Utc).AddTicks(6161),
                            Description = "Repellat laudantium animi beatae voluptatibus.",
                            Icon = "https://picsum.photos/640/480/?image=944",
                            Name = "Generic Metal Soap",
                            Pending = false,
                            Type = 0,
                            UserId = -996
                        },
                        new
                        {
                            Id = -1989,
                            Amount = 119.86m,
                            AuthorizedUserId = -1000,
                            Date = new DateTime(2022, 9, 17, 7, 18, 44, 457, DateTimeKind.Utc).AddTicks(1713),
                            Description = "Ut nemo tenetur delectus cumque.",
                            Icon = "https://picsum.photos/640/480/?image=1007",
                            Name = "Unbranded Concrete Computer",
                            Pending = false,
                            Type = 1,
                            UserId = -999
                        },
                        new
                        {
                            Id = -1988,
                            Amount = 290.30m,
                            Date = new DateTime(2023, 7, 24, 2, 15, 13, 80, DateTimeKind.Utc).AddTicks(9638),
                            Description = "Sint qui ad laboriosam explicabo.",
                            Icon = "https://picsum.photos/640/480/?image=807",
                            Name = "Refined Concrete Gloves",
                            Pending = false,
                            Type = 0,
                            UserId = -1000
                        },
                        new
                        {
                            Id = -1987,
                            Amount = 498.81m,
                            Date = new DateTime(2022, 7, 31, 9, 10, 4, 55, DateTimeKind.Utc).AddTicks(79),
                            Description = "Non nihil odit qui dolorem.",
                            Icon = "https://picsum.photos/640/480/?image=344",
                            Name = "Intelligent Metal Sausages",
                            Pending = false,
                            Type = 1,
                            UserId = -991
                        },
                        new
                        {
                            Id = -1986,
                            Amount = 184.46m,
                            AuthorizedUserId = -997,
                            Date = new DateTime(2022, 9, 12, 2, 25, 33, 833, DateTimeKind.Utc).AddTicks(1467),
                            Description = "Quia incidunt aliquid libero cupiditate.",
                            Icon = "https://picsum.photos/640/480/?image=819",
                            Name = "Sleek Fresh Shoes",
                            Pending = false,
                            Type = 0,
                            UserId = -997
                        },
                        new
                        {
                            Id = -1985,
                            Amount = 494.14m,
                            Date = new DateTime(2022, 11, 26, 21, 0, 38, 555, DateTimeKind.Utc).AddTicks(26),
                            Description = "Velit aspernatur soluta quasi distinctio.",
                            Icon = "https://picsum.photos/640/480/?image=762",
                            Name = "Handcrafted Rubber Fish",
                            Pending = true,
                            Type = 1,
                            UserId = -999
                        },
                        new
                        {
                            Id = -1984,
                            Amount = 397.52m,
                            Date = new DateTime(2022, 10, 13, 19, 0, 6, 856, DateTimeKind.Utc).AddTicks(6254),
                            Description = "Non aliquam sunt facilis architecto.",
                            Icon = "https://picsum.photos/640/480/?image=551",
                            Name = "Sleek Metal Tuna",
                            Pending = false,
                            Type = 0,
                            UserId = -997
                        },
                        new
                        {
                            Id = -1983,
                            Amount = 452.33m,
                            Date = new DateTime(2023, 2, 9, 19, 32, 21, 521, DateTimeKind.Utc).AddTicks(9068),
                            Description = "Atque qui aut saepe aliquam.",
                            Icon = "https://picsum.photos/640/480/?image=349",
                            Name = "Tasty Steel Chips",
                            Pending = false,
                            Type = 1,
                            UserId = -992
                        },
                        new
                        {
                            Id = -1982,
                            Amount = 284.05m,
                            Date = new DateTime(2023, 6, 12, 5, 56, 4, 945, DateTimeKind.Utc).AddTicks(9269),
                            Description = "Iure perspiciatis est iure ab.",
                            Icon = "https://picsum.photos/640/480/?image=831",
                            Name = "Ergonomic Concrete Towels",
                            Pending = false,
                            Type = 0,
                            UserId = -999
                        },
                        new
                        {
                            Id = -1981,
                            Amount = 436.30m,
                            Date = new DateTime(2022, 8, 27, 16, 37, 2, 754, DateTimeKind.Utc).AddTicks(7861),
                            Description = "Porro architecto sed alias molestiae.",
                            Icon = "https://picsum.photos/640/480/?image=764",
                            Name = "Practical Wooden Chair",
                            Pending = false,
                            Type = 0,
                            UserId = -999
                        });
                });

            modelBuilder.Entity("WAB.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CardBalance")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("DailyPoints")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<DateTime>("LastDailyPoints")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = -1000,
                            CardBalance = 1046.618133191682000m,
                            DailyPoints = 31.809586821367600m,
                            LastDailyPoints = new DateTime(2023, 3, 10, 17, 53, 57, 930, DateTimeKind.Local).AddTicks(5826)
                        },
                        new
                        {
                            Id = -999,
                            CardBalance = 233.370281884623000m,
                            DailyPoints = 43.038574131343100m,
                            LastDailyPoints = new DateTime(2023, 7, 22, 21, 45, 25, 868, DateTimeKind.Local).AddTicks(1452)
                        },
                        new
                        {
                            Id = -998,
                            CardBalance = 359.486634612021000m,
                            DailyPoints = 91.905015824269200m,
                            LastDailyPoints = new DateTime(2023, 1, 22, 12, 43, 31, 552, DateTimeKind.Local).AddTicks(9777)
                        },
                        new
                        {
                            Id = -997,
                            CardBalance = 787.40435211663000m,
                            DailyPoints = 21.838570560409600m,
                            LastDailyPoints = new DateTime(2023, 6, 27, 1, 18, 55, 100, DateTimeKind.Local).AddTicks(123)
                        },
                        new
                        {
                            Id = -996,
                            CardBalance = 873.490348008382500m,
                            DailyPoints = 33.400219128934300m,
                            LastDailyPoints = new DateTime(2022, 11, 3, 5, 58, 20, 429, DateTimeKind.Local).AddTicks(1230)
                        },
                        new
                        {
                            Id = -995,
                            CardBalance = 740.784236899366500m,
                            DailyPoints = 41.427117191454700m,
                            LastDailyPoints = new DateTime(2023, 7, 9, 15, 54, 27, 231, DateTimeKind.Local).AddTicks(6943)
                        },
                        new
                        {
                            Id = -994,
                            CardBalance = 851.427571974181500m,
                            DailyPoints = 88.377479179915100m,
                            LastDailyPoints = new DateTime(2023, 1, 8, 3, 37, 55, 625, DateTimeKind.Local).AddTicks(7848)
                        },
                        new
                        {
                            Id = -993,
                            CardBalance = 1450.808413905981000m,
                            DailyPoints = 71.89139106908800m,
                            LastDailyPoints = new DateTime(2023, 7, 13, 18, 54, 11, 932, DateTimeKind.Local).AddTicks(4393)
                        },
                        new
                        {
                            Id = -992,
                            CardBalance = 476.086152514363500m,
                            DailyPoints = 22.053992190128400m,
                            LastDailyPoints = new DateTime(2022, 9, 11, 16, 28, 51, 102, DateTimeKind.Local).AddTicks(3091)
                        },
                        new
                        {
                            Id = -991,
                            CardBalance = 1460.132466294733500m,
                            DailyPoints = 39.371039840198400m,
                            LastDailyPoints = new DateTime(2023, 1, 26, 19, 20, 54, 85, DateTimeKind.Local).AddTicks(2247)
                        });
                });

            modelBuilder.Entity("WAB.DAL.Entities.Transaction", b =>
                {
                    b.HasOne("WAB.DAL.Entities.User", "AuthorizedUser")
                        .WithMany("AuthorizedTransactions")
                        .HasForeignKey("AuthorizedUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WAB.DAL.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorizedUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WAB.DAL.Entities.User", b =>
                {
                    b.Navigation("AuthorizedTransactions");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
